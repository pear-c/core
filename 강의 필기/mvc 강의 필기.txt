1. spring 을 쓰는 이유?
: 객체지향적인 설계가 좋다고 하는 이유와 같은 이유. -> 다형성을 활용한다. (인터페이스를 두고 구현체를 바꿔 끼기 할 수 있음)
이때, 스프링은 이 과정을 편리하게 되도록 스프링 컨테이너가 지원을 해줌. (소위 말하는 dependency injection : DI 덕분)

애플리케이션을 설정하는 코드(assembly) 코드만 수정하면 실제 애플리케이션 관련된 코드는 수정하지 않아도 됨.

SOLID 원칙
(1) 개방-폐쇄 원칙(OCP, Open-Closed Principle) : 확장에는 열려있고, 수정에는 닫혀있다.


2. jdbc 템플릿

3. JPA -> ORM 기술 (object 객체, relational 데이터베이스 map 매핑)
- jpa 는 자바 진형의 표준 인터페이스다.
구현은 여러 업체가 하는 것. 구현체로 Hibernate

4. 스프링 데이터 JPA